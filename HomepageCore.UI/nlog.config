<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">

  <!-- Load the ASP.NET Core plugin -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- write logs to file -->
    <!--<target xsi:type="File" name="allfile" fileName="c:\temp\nlog-all-${shortdate}.log"
                layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|${message} ${exception}" />-->

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="c:\temp\nlog-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />
    <target name="database" xsi:type="Database">
      <connectionString>${var:connectionString}</connectionString>
      <install-command>
        <text>
          IF NOT EXISTS (SELECT name FROM master.sys.databases WHERE name = N'Log')
          CREATE TABLE [dbo].[Log] (
          [Id] [int] IDENTITY(1,1) NOT NULL,
          [Date] [datetime] NOT NULL,
          [Logger] [nvarchar](250) NULL,
          [Level] [nvarchar](50) NOT NULL,
          [Message] [nvarchar](max) NOT NULL,
          [URL] [nvarchar](max) NULL,
          [Action] [nvarchar](max) NULL,
          CONSTRAINT [PK_dbo.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
          WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
          ) ON [PRIMARY]
        </text>
        <ignoreFailures>true</ignoreFailures>
      </install-command>
      <commandText>
        INSERT INTO [dbo].[Log] ([Date], [Logger], [Level], [Message], [URL], [Action]) 
          VALUES (@Date, @Logger, @Level, @Message, @URL, @Action);
      </commandText>
      <parameter name="@date" layout="${date}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message} ${exception}" />
      <parameter name="@url" layout="${aspnet-request-url}" />
      <parameter name="@action" layout="${aspnet-mvc-action}" />
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->

    <!--Skip Microsoft logs and so log only own logs-->
    <!--<logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />-->
    <!--<logger name="*" minlevel="Info" writeTo="ownFile-web" />-->
    <logger name="*" minlevel="Warn" writeTo="database" />
  </rules>
</nlog>